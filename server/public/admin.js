// ==== Kh·ªüi t·∫°o sau khi trang t·∫£i ====
document.addEventListener('DOMContentLoaded', function () {
    console.log("‚úÖ Trang ƒë√£ ƒë∆∞·ª£c t·∫£i. B·∫Øt ƒë·∫ßu l·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng...");
    fetchUsers();

    // T√¨m ki·∫øm ng∆∞·ªùi d√πng
    document.getElementById('searchInput').addEventListener('input', function () {
        const query = this.value.toLowerCase();
        console.log(`üîç T√¨m ki·∫øm v·ªõi t·ª´ kh√≥a: "${query}"`);
        filterUsers(query);
    });

    // Ph√¢n trang
    document.getElementById('prevPage').addEventListener('click', function () {
        changePage('prev');
    });

    document.getElementById('nextPage').addEventListener('click', function () {
        changePage('next');
    });

    // G√°n s·ª± ki·ªán cho c√°c n√∫t thay ƒë·ªïi tr·∫°ng th√°i
    document.getElementById('btnBinhThuong').addEventListener('click', function () {
        const userId = document.getElementById('detailPanel').dataset.userId;
        const currentStatus = document.getElementById('detailPanel').dataset.status;
        const newStatus = 1;  // Tr·∫°ng th√°i "B√¨nh th∆∞·ªùng"

        // Ki·ªÉm tra n·∫øu tr·∫°ng th√°i hi·ªán t·∫°i l√† "B√¨nh th∆∞·ªùng", kh√¥ng c·∫ßn thay ƒë·ªïi
        if (currentStatus === String(newStatus)) {
            alert("Tr·∫°ng th√°i ƒë√£ l√† 'B√¨nh th∆∞·ªùng'.");
            return;
        }

        // Hi·ªÉn th·ªã h·ªôp tho·∫°i x√°c nh·∫≠n
        if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën thay ƒë·ªïi tr·∫°ng th√°i th√†nh 'B√¨nh th∆∞·ªùng'?")) {
            updateStatus(newStatus);  // C·∫≠p nh·∫≠t tr·∫°ng th√°i sau khi x√°c nh·∫≠n
        }
    });

    document.getElementById('btnKhoa').addEventListener('click', function () {
        const userId = document.getElementById('detailPanel').dataset.userId;
        const currentStatus = document.getElementById('detailPanel').dataset.status;
        const newStatus = 2;  // Tr·∫°ng th√°i "Kh√≥a"

        // Ki·ªÉm tra n·∫øu tr·∫°ng th√°i hi·ªán t·∫°i l√† "Kh√≥a", kh√¥ng c·∫ßn thay ƒë·ªïi
        if (currentStatus === String(newStatus)) {
            alert("Tr·∫°ng th√°i ƒë√£ l√† 'Kh√≥a'.");
            return;
        }

        // Hi·ªÉn th·ªã h·ªôp tho·∫°i x√°c nh·∫≠n
        if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën thay ƒë·ªïi tr·∫°ng th√°i th√†nh 'Kh√≥a'?")) {
            updateStatus(newStatus);  // C·∫≠p nh·∫≠t tr·∫°ng th√°i sau khi x√°c nh·∫≠n
        }
    });


    // G√°n s·ª± ki·ªán cho n√∫t "ƒê√≥ng" trong panel chi ti·∫øt
    document.getElementById('closeDetailBtn').addEventListener('click', function () {
        closeDetailPanel();  // G·ªçi h√†m ƒë√≥ng panel chi ti·∫øt
    });

});

// ==== Bi·∫øn to√†n c·ª•c & c·∫•u h√¨nh ====
const ROLE_PRIORITY = { admin: 1, shop: 2, user: 3 };
let allUsers = [];
let currentPage = 1;
const limit = 10;
let isFetching = false;  // ‚úÖ Th√™m bi·∫øn ki·ªÉm tra tr·∫°ng th√°i fetching

// ==== G·ªçi API l·∫•y danh s√°ch ng∆∞·ªùi d√πng ====
function fetchUsers(page) {
    if (isFetching) return; // N·∫øu ƒëang fetch, kh√¥ng l√†m g√¨
    isFetching = true; // B·∫Øt ƒë·∫ßu fetch

    console.log(`üì• ƒêang t·∫£i ng∆∞·ªùi d√πng cho trang ${page}...`);
    const token = localStorage.getItem("accessToken");

    if (!token) {
        alert("‚ö†Ô∏è B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p.");
        window.location.replace("/admin-site/login");
        return;
    }

    fetch(`http://14.225.206.60:3000/api/admin/users?page=${page}&limit=${limit}`, {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    })
        .then(res => res.json())
        .then(data => {
            if (data?.data) {
                allUsers = data.data;
                renderUserTable(allUsers);
                updatePagination(data.pagination);
                console.log(`‚úÖ ƒê√£ t·∫£i ${allUsers.length} ng∆∞·ªùi d√πng`);
            } else {
                console.error("‚ùå D·ªØ li·ªáu ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá:", data);
            }
        })
        .catch(err => {
            console.error("‚ùå L·ªói khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng:", err);
        })
        .finally(() => {
            isFetching = false; // K·∫øt th√∫c fetch
        });
}

// H√†m hi·ªÉn th·ªã danh s√°ch ng∆∞·ªùi d√πng
function renderUserTable(users) {
    const tbody = document.querySelector('#userList tbody');
    tbody.innerHTML = '';

    users.forEach(user => {
        const row = document.createElement('tr');

        const roleCell = document.createElement('td');
        roleCell.textContent = getHighestPriorityRole(user.vai_tro);  // L·∫•y vai tr√≤ ng∆∞·ªùi d√πng
        row.appendChild(roleCell);

        const nameCell = document.createElement('td');
        nameCell.textContent = user.username;
        row.appendChild(nameCell);

        const emailCell = document.createElement('td');
        emailCell.textContent = user.email || 'Ch∆∞a c√≥ email';
        row.appendChild(emailCell);

        const detailCell = document.createElement('td');
        const detailBtn = document.createElement('a');
        detailBtn.href = "#";
        detailBtn.textContent = "Chi ti·∫øt";
        detailBtn.addEventListener('click', e => {
            e.preventDefault();
            showDetail(user);  // Hi·ªÉn th·ªã chi ti·∫øt ng∆∞·ªùi d√πng khi nh·∫•n n√∫t
        });
        detailCell.appendChild(detailBtn);
        row.appendChild(detailCell);

        const statusCell = document.createElement('td');
        statusCell.textContent = getStatusText(user.trang_thai);  // Hi·ªÉn th·ªã tr·∫°ng th√°i c·ªßa ng∆∞·ªùi d√πng
        row.appendChild(statusCell);

        tbody.appendChild(row);
    });
}

// ==== C·∫≠p nh·∫≠t giao di·ªán ph√¢n trang ====
function updatePagination(pagination) {
    document.getElementById('currentPage').textContent = currentPage;
    document.getElementById('prevPage').disabled = currentPage <= 1;
    document.getElementById('nextPage').disabled = currentPage >= pagination.totalPages;
    console.log(`üìÑ Trang hi·ªán t·∫°i: ${currentPage} / ${pagination.totalPages}`);
}

// ==== Chuy·ªÉn trang ====
function changePage(direction) {
    console.log(`üü° changePage() g·ªçi v·ªõi h∆∞·ªõng: ${direction}`);
    if (isFetching) return; // Ki·ªÉm tra tr·∫°ng th√°i fetching

    if (direction === 'prev' && currentPage > 1) {
        currentPage--;
    } else if (direction === 'next') {
        currentPage++;
    }
    console.log(`‚û°Ô∏è ƒêang chuy·ªÉn ƒë·∫øn trang: ${currentPage}`);
    fetchUsers(currentPage);
}

// ==== T√¨m ki·∫øm ng∆∞·ªùi d√πng ====
function filterUsers(query) {
    const filtered = allUsers.filter(user =>
        user.username.toLowerCase().includes(query) ||
        (user.email && user.email.toLowerCase().includes(query))
    );
    console.log(`üîé T√¨m th·∫•y ${filtered.length} ng∆∞·ªùi d√πng kh·ªõp t·ª´ kh√≥a`);
    renderUserTable(filtered);
}

// ==== L·∫•y vai tr√≤ cao nh·∫•t ====
function getHighestPriorityRole(roles) {
    if (!roles || roles.length === 0) return "Kh√¥ng c√≥ vai tr√≤";
    let highest = "user";
    roles.forEach(r => {
        if (ROLE_PRIORITY[r.ten_role] < ROLE_PRIORITY[highest]) highest = r.ten_role;
    });
    return highest;
}

// ==== Hi·ªÉn th·ªã chi ti·∫øt ng∆∞·ªùi d√πng ====
function showDetail(user) {
    const role = getHighestPriorityRole(user.vai_tro);

    document.getElementById('detailName').textContent = user.username;
    document.getElementById('detailEmail').textContent = user.email;
    document.getElementById('detailPhone').textContent = user.sdt || user.sƒët || 'Ch∆∞a c√≥ s·ªë';
    document.getElementById('detailAddress').textContent = user.dia_chi || 'Ch∆∞a c√≥ ƒë·ªãa ch·ªâ';
    document.getElementById('detailStatus').textContent = getStatusText(user.trang_thai);
    document.getElementById('detailPanel').style.display = 'block';
    document.getElementById('detailPanel').dataset.userId = user._id;
    document.getElementById('detailPanel').dataset.status = user.trang_thai;

    if (role === 'admin') {
        document.getElementById('detailStatusRow').style.display = 'none';
        document.getElementById('statusButtonsRow').style.display = 'none';
    } else {
        document.getElementById('detailStatusRow').style.display = 'table-row';
        document.getElementById('statusButtonsRow').style.display = 'table-row';
    }

    if (role === 'shop') {
        console.log("üè™ Ng∆∞·ªùi d√πng l√† shop. ƒêang l·∫•y s·∫£n ph·∫©m...");
        fetchShopProducts(user._id);
    } else {
        document.getElementById('detailProductsTitle').style.display = 'none';
        document.getElementById('detailProducts').style.display = 'none';
        document.getElementById('shopNameRow').style.display = 'none';
        document.getElementById('detailShopName').style.display = 'none';
        document.getElementById('shopAddressRow').style.display = 'none';
        document.getElementById('detailShopAddress').style.display = 'none';
    }

    updateStatusButtons(user.trang_thai);
}

// H√†m chuy·ªÉn tr·∫°ng th√°i th√†nh vƒÉn b·∫£n hi·ªÉn th·ªã
function getStatusText(status) {
    switch (status) {
        case 1: return "B√¨nh th∆∞·ªùng";
        case 2: return "B·ªã kh√≥a";
        default: return "Kh√¥ng x√°c ƒë·ªãnh";
    }
}

// C·∫≠p nh·∫≠t giao di·ªán c√°c n√∫t tr·∫°ng th√°i (B√¨nh th∆∞·ªùng v√† Kh√≥a)
function updateStatusButtons(status) {
    // Thay ƒë·ªïi m√†u n·ªÅn n√∫t "B√¨nh th∆∞·ªùng" v√† "Kh√≥a"
    document.getElementById('btnBinhThuong').style.backgroundColor = status === 1 ? '#5c67f2' : '#ccc';
    document.getElementById('btnKhoa').style.backgroundColor = status === 2 ? '#e74c3c' : '#ccc';
}

// ==== L·∫•y s·∫£n ph·∫©m shop ====
function fetchShopProducts(userId) {
    const token = localStorage.getItem("accessToken");
    let shopId = null;

    console.log(`üì¶ L·∫•y th√¥ng tin shop t·ª´ userId: ${userId}`);
    fetch(`http://14.225.206.60:3000/api/shops/get-shop-info-from-user-id/${userId}`, {
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    })
        .then(res => res.json())
        .then(shopData => {
            if (!shopData?.data?.id_shop) throw new Error("Kh√¥ng t√¨m th·∫•y shop");
            shopId = shopData.data.id_shop;

            document.getElementById('shopNameRow').style.display = "table-row";
            document.getElementById('shopAddressRow').style.display = "table-row";
            document.getElementById('detailShopName').textContent = shopData.data.ten_shop || 'Ch∆∞a c√≥ t√™n';
            document.getElementById('detailShopAddress').textContent = shopData.data.dia_chi || 'Ch∆∞a c·∫≠p nh·∫≠t';

            return fetch(`http://14.225.206.60:3000/api/books?page=1&limit=20`);
        })
        .then(res => res.json())
        .then(bookData => {
            const books = bookData.data || [];
            const filtered = books.filter(book => book.id_shop === shopId);
            console.log(`üìö ƒê√£ l·ªçc ƒë∆∞·ª£c ${filtered.length} s·∫£n ph·∫©m t·ª´ shop`);
            renderShopProducts(filtered);
        })
        .catch(err => {
            console.error("‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m c·ªßa shop:", err.message);
            document.getElementById('detailProducts').innerHTML = "<p>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o.</p>";
        });
}

// ==== Hi·ªÉn th·ªã s·∫£n ph·∫©m c·ªßa shop ====
function renderShopProducts(products) {
    const container = document.getElementById('detailProducts');
    container.innerHTML = '';
    document.getElementById('detailProductsTitle').style.display = "block";
    container.style.display = "block";

    products.forEach(p => {
        const item = document.createElement('div');
        item.className = 'product-item';

        const img = document.createElement('img');
        img.src = p.anh || 'default-product-image.jpg';

        const info = document.createElement('div');
        info.className = 'product-details';

        const name = document.createElement('p');
        name.textContent = p.ten_sach;

        info.appendChild(name);
        item.appendChild(img);
        item.appendChild(info);
        container.appendChild(item);
    });
}

// H√†m c·∫≠p nh·∫≠t tr·∫°ng th√°i ng∆∞·ªùi d√πng
function updateStatus(newStatus) {
    const userId = document.getElementById('detailPanel').dataset.userId;
    const token = localStorage.getItem("accessToken");

    if (!userId) {
        alert("Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng.");
        return;
    }

    // G·ª≠i y√™u c·∫ßu PUT ƒë·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i ng∆∞·ªùi d√πng
    fetch(`http://14.225.206.60:3000/api/admin/users/${userId}/status`, {
        method: 'PUT',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ status: newStatus })
    })
        .then(res => res.json())
        .then(() => {
            // C·∫≠p nh·∫≠t l·∫°i tr·∫°ng th√°i hi·ªÉn th·ªã trong panel chi ti·∫øt
            document.getElementById('detailStatus').textContent = getStatusText(newStatus);
            updateStatusButtons(newStatus);  // C·∫≠p nh·∫≠t giao di·ªán n√∫t b·∫•m
            console.log("‚úÖ Tr·∫°ng th√°i ng∆∞·ªùi d√πng ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t");

            // C·∫≠p nh·∫≠t l·∫°i tr·∫°ng th√°i trong danh s√°ch ng∆∞·ªùi d√πng
            const userIndex = allUsers.findIndex(u => u._id === userId);
            if (userIndex !== -1) {
                allUsers[userIndex].trang_thai = newStatus;
                renderUserTable(allUsers);  // Re-render b·∫£ng ng∆∞·ªùi d√πng
            }
        })
        .catch(err => console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i:", err));
}

// H√†m ƒë√≥ng panel chi ti·∫øt
function closeDetailPanel() {
    document.getElementById('detailPanel').style.display = 'none';  // ·∫®n panel chi ti·∫øt
    console.log("‚ùå ƒê√≥ng panel chi ti·∫øt");
}