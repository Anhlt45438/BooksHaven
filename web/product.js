document.addEventListener('DOMContentLoaded', function () {
    console.log("üöÄ [Kh·ªüi ƒë·ªông] Trang ƒë√£ t·∫£i, b·∫Øt ƒë·∫ßu l·∫•y danh s√°ch s·∫£n ph·∫©m...");

    const tableBody = document.querySelector('.user-list tbody');
    const detailPanel = document.getElementById('detailPanel');
    const closeDetailBtn = document.getElementById('closeDetailBtn');
    const searchInput = document.getElementById('searchInput');
    const searchButton = document.getElementById('searchButton');
    const currentPageSpan = document.getElementById('currentPage');
    const prevButton = document.getElementById('prevPage');
    const nextButton = document.getElementById('nextPage');
    const shopNameSpan = document.getElementById('detailShopName');

    const API_BASE_URL = 'http://14.225.206.60:3000/api/books';
    const LIMIT = 10;
    let currentPage = 1;
    let totalPages = 1;

    let allProducts = [];

    // ============================
    // H√ÄM L·∫§Y DANH S√ÅCH S·∫¢N PH·∫®M
    // ============================
    async function fetchProducts(page = 1) {
        console.log(`üì° [API] G·ª≠i y√™u c·∫ßu l·∫•y danh s√°ch s·∫£n ph·∫©m t·ª´: ${API_BASE_URL}?page=${page}&limit=${LIMIT}`);

        try {
            const response = await fetch(`${API_BASE_URL}?page=${page}&limit=${LIMIT}`);
            console.log("üîÑ [API] ƒêang x·ª≠ l√Ω ph·∫£n h·ªìi t·ª´ server...");

            if (!response.ok) {
                throw new Error(`‚ùå L·ªói khi l·∫•y d·ªØ li·ªáu s·∫£n ph·∫©m! (Status: ${response.status})`);
            }

            const data = await response.json();
            console.log("‚úÖ [API] D·ªØ li·ªáu s·∫£n ph·∫©m nh·∫≠n ƒë∆∞·ª£c:", data);

            if (!data || !Array.isArray(data.data)) {
                throw new Error("‚ö†Ô∏è API kh√¥ng tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá (thi·∫øu 'data')");
            }

            allProducts = data.data;
            totalPages = Math.ceil(data.pagination.total / LIMIT);
            renderProducts(allProducts);
            updatePagination();
        } catch (error) {
            console.error("‚ö†Ô∏è [L·ªói] Kh√¥ng th·ªÉ l·∫•y danh s√°ch s·∫£n ph·∫©m:", error);
        }
    }

    // ============================
    // H√ÄM HI·ªÇN TH·ªä DANH S√ÅCH S√ÅCH
    // ============================
    async function renderProducts(products) {
        console.log("üìã [UI] Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m...");
        tableBody.innerHTML = '';

        if (products.length === 0) {
            tableBody.innerHTML = `<tr><td colspan="4" style="text-align: center;">Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ph√π h·ª£p.</td></tr>`;
            return;
        }

        for (const product of products) {
            // console.log(`üîπ [UI] Hi·ªÉn th·ªã s·∫£n ph·∫©m: ${product.ten_sach}`);

            const row = document.createElement('tr');

            const imageCell = document.createElement('td');
            const image = document.createElement('img');
            image.src = product.anh ? (product.anh.startsWith('data:image') ? product.anh : `http://14.225.206.60:3000/uploads/${product.anh}`) : 'default-image.jpg';
            image.alt = product.ten_sach;
            image.width = 50;
            imageCell.appendChild(image);
            row.appendChild(imageCell);

            const nameProductCell = document.createElement('td');
            nameProductCell.textContent = product.ten_sach;
            row.appendChild(nameProductCell);

            const nameProductInfo = document.createElement('td');
            const shopName = await getShopNameById(product.id_shop);
            const price = product.gia ? `${product.gia.toLocaleString()} ƒë` : "Kh√¥ng c√≥ gi√°";
            nameProductInfo.innerHTML = `${shopName} <br> Gi√°: ${price}`;
            row.appendChild(nameProductInfo);

            const detailCell = document.createElement('td');
            const detailButton = document.createElement('a');
            detailButton.textContent = 'Chi ti·∫øt';
            detailButton.classList.add('detail-btn');
            detailButton.dataset.id = product._id || 'unknown';
            detailCell.appendChild(detailButton);
            row.appendChild(detailCell);

            const statusCell = document.createElement('td');
            statusCell.textContent = product.trang_thai ? 'ƒê√£ duy·ªát' : 'Ch·ªù duy·ªát';
            row.appendChild(statusCell);

            tableBody.appendChild(row);
        }

        console.log("‚úÖ [UI] Ho√†n t·∫•t hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m.");

        document.querySelectorAll('.detail-btn').forEach(button => {
            button.addEventListener('click', function () {
                const id = this.dataset.id;
                if (id === 'unknown') {
                    console.error("‚ö†Ô∏è [L·ªói] Kh√¥ng th·ªÉ l·∫•y chi ti·∫øt s·∫£n ph·∫©m v√¨ ID kh√¥ng h·ª£p l·ªá!");
                    return;
                }
                console.log(`üîç [Click] Xem chi ti·∫øt s·∫£n ph·∫©m c√≥ ID: ${id}`);
                fetchProductDetail(id);
            });
        });
    }

    // H√†m l·∫•y th√¥ng tin shop theo id_shop
    async function getShopNameById(id_shop) {
        if (!id_shop) {
            console.error("‚ö†Ô∏è [L·ªói] id_shop kh√¥ng h·ª£p l·ªá ho·∫∑c kh√¥ng t·ªìn t·∫°i.");
            return "Kh√¥ng c√≥ shop";
        }

        try {
            const response = await fetch(`http://14.225.206.60:3000/api/shops/get-shop-info/${id_shop}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id_shop: id_shop })
            });

            if (!response.ok) {
                throw new Error("Kh√¥ng th·ªÉ l·∫•y th√¥ng tin shop");
            }

            const shopData = await response.json();
            return shopData?.data?.ten_shop || "Kh√¥ng x√°c ƒë·ªãnh";
        } catch (error) {
            console.error("L·ªói khi l·∫•y th√¥ng tin shop:", error);
            return "Kh√¥ng x√°c ƒë·ªãnh";
        }
    }

    // ============================
    // H√ÄM L·∫§Y CHI TI·∫æT S√ÅCH
    // ============================
    async function fetchProductDetail(id) {
        console.log(`üì° [API] L·∫•y chi ti·∫øt s·∫£n ph·∫©m (ID: ${id})`);

        try {
            const response = await fetch(`${API_BASE_URL}/${id}`);
            console.log("üîÑ [API] ƒêang x·ª≠ l√Ω ph·∫£n h·ªìi...");

            if (!response.ok) {
                throw new Error(`‚ùå Kh√¥ng th·ªÉ l·∫•y chi ti·∫øt s·∫£n ph·∫©m! (Status: ${response.status})`);
            }

            const data = await response.json();
            console.log("‚úÖ [API] D·ªØ li·ªáu chi ti·∫øt s·∫£n ph·∫©m:", data);

            if (!data || !data.data) {
                throw new Error("‚ö†Ô∏è API kh√¥ng tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá");
            }

            showProductDetail(data.data);
        } catch (error) {
            console.error("‚ö†Ô∏è [L·ªói] Kh√¥ng th·ªÉ l·∫•y chi ti·∫øt s·∫£n ph·∫©m:", error);
        }
    }

    // ============================
    // H√ÄM HI·ªÇN TH·ªä CHI TI·∫æT S√ÅCH
    // ============================
    async function showProductDetail(product) {
        console.log(`üìã [UI] Hi·ªÉn th·ªã chi ti·∫øt s·∫£n ph·∫©m: ${product.ten_sach}`);

        document.getElementById('detailImage').src = product.anh ?
            (product.anh.startsWith('data:image') ? product.anh : `http://14.225.206.60:3000/uploads/${product.anh}`)
            : 'default-image.jpg';

        document.getElementById('detailName').textContent = product.ten_sach || "Kh√¥ng c√≥ t√™n";
        document.getElementById('detailAuthor').textContent = product.tac_gia || "Kh√¥ng c√≥ t√°c gi·∫£";
        document.getElementById('detailCategory').textContent = product.the_loai?.length
            ? product.the_loai.map(t => t.ten_the_loai).join(', ')
            : "Kh√¥ng c√≥ th·ªÉ lo·∫°i";
        document.getElementById('detailPrice').textContent = product.gia ? `${product.gia.toLocaleString()}ƒë` : "Kh√¥ng c√≥ gi√°";
        document.getElementById('detailDescription').textContent = product.mo_ta || "Kh√¥ng c√≥ m√¥ t·∫£";
        document.getElementById('detailPages').textContent = product.so_trang || "Kh√¥ng c√≥ s·ªë trang";
        document.getElementById('detailSize').textContent = product.kich_thuoc || "Kh√¥ng c√≥ k√≠ch th∆∞·ªõc";

        if (product.id_shop) {
            try {
                const response = await fetch(`http://14.225.206.60:3000/api/shops/get-shop-info/${product.id_shop}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id_shop: product.id_shop })
                });

                const shopData = await response.json();
                document.getElementById('detailShopName').textContent = shopData?.data?.ten_shop || 'Kh√¥ng x√°c ƒë·ªãnh';
            } catch (error) {
                console.error("‚ö†Ô∏è [L·ªói] Kh√¥ng th·ªÉ l·∫•y t√™n shop:", error);
                document.getElementById('detailShopName').textContent = "Kh√¥ng x√°c ƒë·ªãnh";
            }
        } else {
            document.getElementById('detailShopName').textContent = "Kh√¥ng x√°c ƒë·ªãnh";
        }

        document.getElementById('detailQuantity').textContent = product.so_luong || "Kh√¥ng c√≥ k√≠ch th∆∞·ªõc";

        detailPanel.style.display = 'block';
        console.log("‚úÖ [UI] Chi ti·∫øt s·∫£n ph·∫©m hi·ªÉn th·ªã th√†nh c√¥ng.");
    }

    // ============================
    // H√ÄM T√åM KI·∫æM S√ÅCH THEO T√äN
    // ============================
    async function searchProducts() {
        const keyword = searchInput.value.trim().toLowerCase();
        console.log(`üîç [T√¨m ki·∫øm] G·ª≠i t·ª´ kh√≥a t√¨m ki·∫øm ƒë·∫øn API: "${keyword}"`);

        if (keyword === '') {
            console.log("üìÑ [T√¨m ki·∫øm] Kh√¥ng c√≥ t·ª´ kh√≥a, hi·ªÉn th·ªã l·∫°i danh s√°ch s·∫£n ph·∫©m m·∫∑c ƒë·ªãnh.");
            fetchProducts(currentPage);
            return;
        }

        try {
            const response = await fetch(`http://14.225.206.60:3000/api/books/search?keyword=${encodeURIComponent(keyword)}`);
            console.log("üîÑ [API] ƒêang x·ª≠ l√Ω k·∫øt qu·∫£ t√¨m ki·∫øm...");

            if (!response.ok) {
                throw new Error(`‚ùå T√¨m ki·∫øm th·∫•t b·∫°i! (Status: ${response.status})`);
            }

            const result = await response.json();
            console.log("‚úÖ [API] K·∫øt qu·∫£ t√¨m ki·∫øm:", result);

            if (!result || !Array.isArray(result.data)) {
                throw new Error("‚ö†Ô∏è D·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ API t√¨m ki·∫øm kh√¥ng h·ª£p l·ªá.");
            }

            renderProducts(result.data);
        } catch (error) {
            console.error("‚ö†Ô∏è [L·ªói t√¨m ki·∫øm] Kh√¥ng th·ªÉ l·∫•y k·∫øt qu·∫£ t√¨m ki·∫øm:", error);
        }
    }

    // ============================
    // S·ª∞ KI·ªÜN ƒê√ìNG PANEL CHI TI·∫æT
    // ============================
    closeDetailBtn.addEventListener('click', function () {
        console.log("‚ùå [UI] ƒê√≥ng panel chi ti·∫øt s·∫£n ph·∫©m.");
        detailPanel.style.display = 'none';
    });

    // ============================
    // S·ª∞ KI·ªÜN T√åM KI·∫æM S·∫¢N PH·∫®M
    // ============================
    searchButton.addEventListener('click', searchProducts);
    searchInput.addEventListener('input', searchProducts);

    // ============================
    // H√ÄM C·∫¨P NH·∫¨T PH√ÇN TRANG
    // ============================
    function updatePagination() {
        currentPageSpan.textContent = currentPage;
        prevButton.disabled = currentPage <= 1;
        nextButton.disabled = currentPage >= totalPages;
    }

    // ============================
    // H√ÄM CHUY·ªÇN TRANG
    // ============================
    function changePage(direction) {
        if (direction === 'prev' && currentPage > 1) {
            currentPage--;
        } else if (direction === 'next' && currentPage < totalPages) {
            currentPage++;
        }

        fetchProducts(currentPage);
    }

    prevButton.addEventListener('click', function () {
        changePage('prev');
    });

    nextButton.addEventListener('click', function () {
        changePage('next');
    });

    // T·∫£i danh s√°ch s·∫£n ph·∫©m ban ƒë·∫ßu
    fetchProducts();
});
